trigger:
- dev

pr:
- dev

variables:
- name: ssh_key_secure_file
  value: 'file'  # Replace with the actual name of your Secure File

- name: ssh_public_key_path
  value: "$(Agent.HomeDirectory)/.ssh/id_rsa.pub"

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: terraform_approval
    displayName: "Terraform Approval"
    steps:
      - script: 
          echo "Terraform Approval Job"
        displayName: 'Terraform Approval'
        condition: succeededOrFailed()

  - job: manual_approval
    displayName: "Manual Approval"
    dependsOn: terraform_approval
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      ssh_key_secure_file: 'file'
    steps:
      - script: 
          echo "Manual Approval Job"
        displayName: 'Manual Approval'
        condition: succeededOrFailed()

      - task: DownloadSecureFile@1
        name: downloadSSHKey
        displayName: 'Download SSH Key'
        inputs:
          secureFile: $(ssh_key_secure_file)
          retryCount: 3

      - script: |
          mkdir -p $(Agent.HomeDirectory)/.ssh/id_rsa.pub
          ls -la $(Agent.TempDirectory)/$(ssh_key_secure_file)
          cp $(Agent.TempDirectory)/$(ssh_key_secure_file) $(Agent.HomeDirectory)/.ssh/id_rsa.pub
          chmod 600 $(Agent.HomeDirectory)/.ssh/id_rsa.pub
        displayName: 'Configure SSH Key'

      - script: |
          cd $(Build.SourcesDirectory)/rose
          pwd
          terraform init
        displayName: 'Terraform Init'

      - script: |
          cd $(Build.SourcesDirectory)/rose
          terraform validate
        displayName: 'Terraform Validate'

      - script: |
          az login 
        displayName: 'Azure Login'  

      - script: |
          cd $(Build.SourcesDirectory)/rose
          terraform plan \
          -var "nsg_name=$(nsg_name)" \
          -var "location=$(location)" \
          -var "resource_group_name=$(resource_group_name)" \
          -var "nsg_rules=[{\"name\":\"SSH\",\"priority\":100,\"access\":\"Allow\",\"protocol\":\"TCP\",\"source_port_range\":\"*\",\"destination_port_range\":\"22\",\"source_address_prefix\":\"*\",\"destination_address_prefix\":\"*\"},{\"name\":\"HTTP\",\"priority\":101,\"access\":\"Allow\",\"protocol\":\"TCP\",\"source_port_range\":\"*\",\"destination_port_range\":\"80\",\"source_address_prefix\":\"*\",\"destination_address_prefix\":\"*\"}]" \
          -var "vnet_name=$(vnet_name)" \
          -var "vnet_address_space=[\"10.0.0.0/16\"]" \
          -var "subnet_name=$(subnet_name)" \
          -var "subnet_address_prefix=[\"10.0.0.0/24\"]" \
          -var "vm_name=$(vm_name)" \
          -var "vm_size=$(vm_size)" \
          -var "vm_username=$(vm_username)" \
          -var "storage_account_name=$(storage_account_name)" \
          -var "container_name=$(container_name)" \
          -var "location_name=$(location_name)" \
          -var "ssh_public_key_path=$(ssh_public_key_path)"
        displayName: 'Terraform Plan'

  - job: manual_intervention
    displayName: 'Manual Approval Intervention'
    dependsOn: manual_approval
    pool: server
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 5
        inputs:
          instructions: 'Please review and manually approve the Terraform changes.'

  - job: apply_changes
    displayName: 'Apply Terraform Changes'
    dependsOn: manual_intervention
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: |
          cd $(Build.SourcesDirectory)/rose
          terraform init
          az login 
          terraform apply -auto-approve \
          -var "nsg_name=$(nsg_name)" \
          -var "location=$(location)" \
          -var "resource_group_name=$(resource_group_name)" \
          -var "nsg_rules=[{\"name\":\"SSH\",\"priority\":100,\"access\":\"Allow\",\"protocol\":\"TCP\",\"source_port_range\":\"*\",\"destination_port_range\":\"22\",\"source_address_prefix\":\"*\",\"destination_address_prefix\":\"*\"},{\"name\":\"HTTP\",\"priority\":101,\"access\":\"Allow\",\"protocol\":\"TCP\",\"source_port_range\":\"*\",\"destination_port_range\":\"80\",\"source_address_prefix\":\"*\",\"destination_address_prefix\":\"*\"}]" \
          -var "vnet_name=$(vnet_name)" \
          -var "vnet_address_space=[\"10.0.0.0/16\"]" \
          -var "subnet_name=$(subnet_name)" \
          -var "subnet_address_prefix=[\"10.0.0.0/24\"]" \
          -var "vm_name=$(vm_name)" \
          -var "vm_size=$(vm_size)" \
          -var "vm_username=$(vm_username)" \
          -var "storage_account_name=$(storage_account_name)" \
          -var "container_name=$(container_name)" \
          -var "location_name=$(location_name)" \
          -var "ssh_public_key_path=$(ssh_public_key_path)"
          if [ $? -ne 0 ]; then
            echo "Error: Terraform apply failed. Please check the apply output for details."
            exit 1
          fi
        displayName: 'Apply Terraform Changes'
