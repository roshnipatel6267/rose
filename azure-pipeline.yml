trigger:
  branches:
    include:
      - test

pool:
  vmImage: 'ubuntu-latest'

variables:
  SSH_PUBLIC_KEY: $(SSH_PUBLIC_KEY)

jobs:
- job: download_and_copy
  steps:
  - task: DownloadSecureFile@1
    name: download
    displayName: 'Download Secure File'
    inputs:
      secureFile: 'File'

  - script: |
      cat $(download.secureFilePath)
    displayName: 'Copy file to workspace directory'

- job: terraform_approval
  displayName: "Terraform Approval"
  steps:
    - script: 
        echo "Terraform Approval Job"
      displayName: 'Terraform Approval'
      condition: succeededOrFailed()

    - script: |
        ls -la
        pwd
        cd $(Build.SourcesDirectory)
        pwd
        cd rose
        echo "ssh_public_key = \"$(SSH_PUBLIC_KEY)\"" > terraform.auto.tfvars
        terraform init
        terraform validate
        az login 
        terraform plan -var-file=terraform.auto.tfvars
      displayName: 'Terraform Plan'

- job: manual_intervention
  displayName: 'Manual Approval Intervention'
  dependsOn: terraform_approval
  pool: server
  steps:
  - task: ManualValidation@0
    timeoutInMinutes: 5
    inputs:
      instructions: 'Please review and manually approve the Terraform changes.'

- job: apply_changes
  displayName: 'Apply Terraform Changes'
  dependsOn: manual_intervention
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      cd $(Build.SourcesDirectory)/rose
      echo 'ssh_public_key = "$(SSH_PUBLIC_KEY)"' > terraform.auto.tfvars
      terraform init
      az login 
      terraform apply -auto-approve -var-file=terraform.auto.tfvars
    displayName: 'Apply Terraform Changes'
